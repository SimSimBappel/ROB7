# -*- coding: utf-8 -*-
"""Bandit_exercise_environment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_vb45jI9hc9eei2RaTzI5VVlhmxtDZkI
"""

# Commented out IPython magic to ensure Python compatibility.
import math
import random
import seaborn as sns
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
plt.style.use('seaborn-whitegrid')
# %matplotlib inline

#Generate Data
user = list(range(0,10000))
m1 = np.random.normal(100,10,10000)
m2 = np.random.normal(105,5,10000)
m3 = np.random.normal(95,10,10000)
m4 = np.random.normal(100,5,10000)

df = pd.DataFrame({"user":user, "m1":m1,"m2":m2,"m3":m3,"m4":m4})
#df.head()

# Box plot

#sns.boxplot(x="variable", y="value", data=pd.melt(df[['m1','m2','m3','m4']]))
#plt.title("Distribution of Rewards by Message")

# Variable initialization

#Initialize Variables
N = len(df.index)       # the time (or round)
d = 4                   # number of possible messages
Qt_a = 0
Nt_a = np.zeros(d)      #number of times action a has been selected prior to T
                        #If Nt(a) = 0, then a is considered to be a maximizing action.
c = 1                   #a number greater than 0 that controls the degree of exploration

sum_rewards = np.zeros(d) #cumulative sum of reward for a particular message

#helper variables to perform analysis
hist_t = [] #holds the natural log of each round
hist_achieved_rewards = [] #holds the history of the UCB CHOSEN cumulative rewards
hist_best_possible_rewards = [] #holds the history of OPTIMAL cumulative rewards
hist_random_choice_rewards = [] #holds the history of RANDONMLY selected actions rewards
###

df.head(10)